@startuml

!function $resource($alias) !return "class " + $alias + "<< (R,LimeGreen) Resource>> #LightGreen"
!function $endpoints($alias) !return "class " + $alias + "<< (E,Crimson) Endpoints >> #LightPink" 
!function $seperator($text) !return "=="+"<U+0020>"+$text+"<U+0020>"+"=="

title API Structure

class Root <<(A,LightYellow) API>> #Yellow {
  == Meta ==
  version: 0.0.0
  path: domain.ext/v1
  == Response JSON ==
  status: Number
  errors: [] | [String]
  detail: Object
  --
  V1
}

together {
  $resource(Users) {
    =path: /v1/users
    
    ==$seperator("Endpoints")
    ===$seperator("/")
      GET  : (list users)
      POST : (create user)

    ===$seperator("/{userId}")
      GET : (read user)
      PUT : (update user)
      DELETE : (delete user)

    ===$seperator("/{userId}/posts")
      GET : (list user posts)

    ===$seperator("/{userId}/comments")
      GET : (list user comments)
  }

  $resource(Blogs) {
    =path: /v1/blogs
    
    ==$seperator("Endpoints")
    ===$seperator("/")
      GET : (list blogs)
      POST : (create blog)

    ===$seperator("/{blogId}")
      GET : (read blog)
      PUT : (update blog)
      DELETE : (delete blog)

    ===$seperator("/{blogId}/posts")
      GET : (list blog posts) 
  }

  $resource(Posts) {
    =path: /v1/posts
    
    ==$seperator("Endpoints")
    ===$seperator("/")
      GET : (list posts)
      POST : (create post)

    ===$seperator("/{postId}")
      GET : (read post)
      PUT : (update post)
      DELETE : (delete post)

    ===$seperator("/{postId}/comments")
      GET : (list blog comments)

    ===$seperator("/{postId}/reactions")
      GET : (list blog reactions)
  }

  $resource(Comments) {
    =path: /v1/comments
    
    ==$seperator("Endpoints")
    ===$seperator("/")
      GET : (list comments)
      POST : (create comment)

    ===$seperator("/{postId}")
      GET : (read post)
      PUT : (update post)
      DELETE : (delete post)
  }

}


Root::V1 -> Users::path
Root::V1 -> Blogs::path
Root::V1 -> Posts::path
Root::V1 -> Comments::path
@enduml